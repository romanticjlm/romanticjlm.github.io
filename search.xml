<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2021/10/31/c-yu-yan-xi-lie-zhi-typedef-yong-fa/"/>
      <url>/2021/10/31/c-yu-yan-xi-lie-zhi-typedef-yong-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="C语言难点梳理"><a href="#C语言难点梳理" class="headerlink" title="C语言难点梳理"></a>C语言难点梳理</h1><h2 id="1-typedef-用法"><a href="#1-typedef-用法" class="headerlink" title="1. typedef 用法"></a>1. typedef 用法</h2><p>typedef声明，简称typedef，为现有类型创建一个新的名字，或称为类型别名。<br>typedef不仅可以为<strong>变量</strong>定义别名，可以为<strong>struct</strong>定义别名，还可以为<strong>函数指针</strong>定义别名。<br>万能用法：<strong>typedef   ==原类型名== 类型别名；</strong>  注意：<strong>数组和函数指针</strong>要稍加转换然后再进行类比。<br>            typedef  ==int==                                       INT32;<br>            typedef  ==struct{int age; int high;}==   student;<br>            <strong>对于数组：</strong><br>            typedef int arry2[2];<br>            typedef  ==int[2]==  arry2;<code>//这种写法只是为了便于理解，不能这样使用</code><br>           <strong>对于函数指针：</strong><br>            typedef int (*pFunASdd)(int, int);<br>            typedef ==int( * )(int, int)==  pFunASdd;<code>//这种写法只是为了便于理解，不能这样使用</code></p><h3 id="1-1给变量定义别名"><a href="#1-1给变量定义别名" class="headerlink" title="1.1给变量定义别名"></a>1.1给变量定义别名</h3><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span>   INT32;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> * pINT32;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span>  INT8;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span> * pINT8;</span><br></pre></td></tr></tbody></table></figure><ul><li><p>*<em>给int类型变量定义别名INT32，给int <em>类型变量定义别名pINT32。</em></em></p></li><li><p>*<em>给char类型变量定义别名INT8，给char <em>类型变量定义别名pINT8。</em></em><br>特殊的，使用typedef定义数组别名方法：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">typedef int arry2[2];</span><br></pre></td></tr></tbody></table></figure></li><li><p><strong>给int[2]类型的数组定义了别名为arry2 。</strong><br>使用方法如下：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">arry2 student;</span><br><span class="line">student[0] = 20;</span><br><span class="line">student[1] = 40;</span><br></pre></td></tr></tbody></table></figure><p>示例代码如下：</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*使用typedef为变量类型定义别名*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span>   INT32;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span>* pINT32;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span>  INT8;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span>* pINT8;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*使用typedef为数组类型int[2]定义别名*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> arry2[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">INT32 a = <span class="number">1</span>;</span><br><span class="line">pINT32 pt = &amp;a;</span><br><span class="line">pINT32 pt3 = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">INT8 b = <span class="number">26</span>;</span><br><span class="line">pINT8 pt2= &amp;b;</span><br><span class="line"></span><br><span class="line">arry2 age2;</span><br><span class="line">pt3 = age2;</span><br><span class="line">age2[<span class="number">0</span>] = <span class="number">21</span>;</span><br><span class="line">age2[<span class="number">1</span>] = <span class="number">42</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*INT32 等价于 int;  pINT32 等价于 int *; */</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"sizeof(INT32) = %d,sizeof(int) = %d, sizeof(a) = %d\r\n"</span>, <span class="keyword">sizeof</span>(INT32), <span class="keyword">sizeof</span>(<span class="keyword">int</span>), <span class="keyword">sizeof</span>(a));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"a = %d\r\n"</span>, a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"sizeof(pINT32) = %d,sizeof(int *) = %d, sizeof(pt) = %d\r\n"</span>, <span class="keyword">sizeof</span>(pINT32), <span class="keyword">sizeof</span>(<span class="keyword">int</span> *), <span class="keyword">sizeof</span>(pt));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"pt = 0x%08X, *pt = %d\r\n"</span>, pt, *pt);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*INT8 等价于 char;  pINT8 等价于 char *; */</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"sizeof(INT8) = %d,sizeof(char) = %d, sizeof(b) = %d\r\n"</span>, <span class="keyword">sizeof</span>(INT8), <span class="keyword">sizeof</span>(<span class="keyword">char</span>), <span class="keyword">sizeof</span>(b));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"b = %d\r\n"</span>, b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"sizeof(pINT8) = %d,sizeof(char *) = %d, sizeof(pt2) = %d\r\n"</span>, <span class="keyword">sizeof</span>(pINT32), <span class="keyword">sizeof</span>(<span class="keyword">int</span>*), <span class="keyword">sizeof</span>(pt));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"pt2 = 0x%08X, *pt2 = %d\r\n"</span>, pt2, *pt2);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* arry2 等价于 int[2]; */</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"sizeof(arry2) = %d, sizeof(age2) = %d\r\n"</span>, <span class="keyword">sizeof</span>(arry2), <span class="keyword">sizeof</span>(age2));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"age2[0] = %d, age2[1] = %d, \r\n"</span>, age2[<span class="number">0</span>], age2[<span class="number">1</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"age2 = 0x%p, pt3 = 0x%p, \r\n"</span>, age2, pt3);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p><strong>注意所有指针的大小都为4（32位系统中），指针本质就是地址。</strong></p></li><li><p><strong>运行结果展示：</strong></p></li></ul><p><img src="/images/C%E8%AF%AD%E8%A8%80%E7%B3%BB%E5%88%97%E4%B9%8Btypedef%E7%94%A8%E6%B3%95/%E6%8D%95%E8%8E%B7-16326549143052-16356564324401.PNG" alt="变量"></p><h3 id="1-2-给结构体定义别名"><a href="#1-2-给结构体定义别名" class="headerlink" title="1.2 给结构体定义别名"></a>1.2 给结构体定义别名</h3><p>以学生为例，建立一个结构体，学生包含姓名。</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">char</span> *name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p>使用typedef定义该结构体别名以及结构体指针别名如下：</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">char</span> *name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">}Student, *pStudent;</span><br></pre></td></tr></tbody></table></figure><p><strong>示例：</strong></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*使用typedef为结构体类型定义别名*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* name;</span><br><span class="line"><span class="keyword">char</span> classNo;<span class="comment">/*班级*/</span></span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line">}Student, *pStudent;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">Student zhangsan = {<span class="string">"zhangSan"</span>, <span class="number">61</span>, <span class="number">15</span> };</span><br><span class="line">Student lisi     = { <span class="string">"lisi"</span>,    <span class="number">62</span>, <span class="number">16</span> };</span><br><span class="line">pStudent p1      = &amp;lisi;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*Student 等价于 struct student; */</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"sizeof(Student)   = %d,sizeof(struct student) = %d\r\n"</span>, <span class="keyword">sizeof</span>(Student), <span class="keyword">sizeof</span>(struct student));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"zhangsan name     = %s, \r\n"</span>, zhangsan.name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"zhangsan age      = %d, \r\n"</span>, zhangsan.age);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"zhangsan classNo  = %d, \r\n"</span>, zhangsan.classNo);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*pStudent 等价于 struct student * ;*/</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"sizeof(pStudent)  = %d,sizeof(struct student *) = %d\r\n"</span>, <span class="keyword">sizeof</span>(pStudent), <span class="keyword">sizeof</span>(struct student *));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"lisi name         = %s, \r\n"</span>, p1-&gt;name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"lisi age          = %d, \r\n"</span>, p1-&gt;age);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"lisi classNo      = %d, \r\n"</span>, p1-&gt;classNo);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><strong>运行结果：</strong></p><p><img src="/images/C%E8%AF%AD%E8%A8%80%E7%B3%BB%E5%88%97%E4%B9%8Btypedef%E7%94%A8%E6%B3%95/%E6%8D%95%E8%8E%B71-16326548886201.PNG" alt="结构体"></p><h3 id="1-3-给函数指针定义别名"><a href="#1-3-给函数指针定义别名" class="headerlink" title="1.3 给函数指针定义别名"></a>1.3 给函数指针定义别名</h3><p>以学生为例，建立一个结构体，学生包含姓名，年龄，爱好。其中爱好对应一个函数指针,其别名为good_work。</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">void</span> <span class="params">(*pFunGoodWork)</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br></pre></td></tr></tbody></table></figure><ul><li>可以进行如下类比(实际实现不能这样写)<figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">void</span> <span class="params">(*pFunGoodWork)</span><span class="params">(<span class="keyword">void</span>)</span></span>;<span class="comment">//typedef void(*)(void)  pFunGoodWork;</span></span><br></pre></td></tr></tbody></table></figure>先有个==函数指针类型void(*)(void)==，然后给这个==函数指针类型定义的别名为 pFunGoodWork；==</li></ul><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">char</span> *name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    pFunGoodWork GoodWork;</span><br><span class="line">}Student, *pStudent;</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><strong>示例：</strong></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*使用typedef为函数指针类型定义别名*/</span></span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">int</span> <span class="params">(*AddTest)</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">void</span> <span class="params">(*pFunGoodWork)</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*使用typedef为结构体类型定义别名*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* name;</span><br><span class="line"><span class="keyword">char</span> classNo;<span class="comment">/*班级*/</span></span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line">pFunGoodWork GoodWork;</span><br><span class="line">}Student, * pStudent;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PlayPingPang</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Be good at playing ping pang \r\n"</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SingSong</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Be good at Singing song \r\n"</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">Student students[<span class="number">2</span>] =</span><br><span class="line">{</span><br><span class="line">{ <span class="string">"zhangSan"</span>, <span class="number">61</span>, <span class="number">15</span>, PlayPingPang},</span><br><span class="line">{ <span class="string">"lisi"</span>    , <span class="number">62</span>, <span class="number">16</span>, SingSong},</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"student name: %s,\t age : %d,\t classNo: %d\r\n"</span>, students[i].name, students[i].age, students[i].classNo);</span><br><span class="line">students[i].GoodWork();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><strong>显示结果：</strong></p><p><img src="/images/C%E8%AF%AD%E8%A8%80%E7%B3%BB%E5%88%97%E4%B9%8Btypedef%E7%94%A8%E6%B3%95/%E6%8D%95%E8%8E%B73.PNG" alt="函数指针"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/10/31/hello-world/"/>
      <url>/2021/10/31/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
